[{"C:\\Dev\\ideapad\\src\\index.js":"1","C:\\Dev\\ideapad\\src\\serviceWorkerRegistration.js":"2","C:\\Dev\\ideapad\\src\\context\\AuthContext.js":"3","C:\\Dev\\ideapad\\src\\firebase.js":"4","C:\\Dev\\ideapad\\src\\components\\layout\\App.js":"5","C:\\Dev\\ideapad\\src\\components\\layout\\AppNav.js":"6","C:\\Dev\\ideapad\\src\\components\\pages\\Dashboard.js":"7","C:\\Dev\\ideapad\\src\\components\\pages\\SignUp.js":"8","C:\\Dev\\ideapad\\src\\components\\pages\\Login.js":"9","C:\\Dev\\ideapad\\src\\components\\layout\\Alert.js":"10","C:\\Dev\\ideapad\\src\\context\\ProjectsContext.js":"11","C:\\Dev\\ideapad\\src\\components\\projects\\Project.js":"12","C:\\Dev\\ideapad\\src\\context\\FeaturesContext.js":"13","C:\\Dev\\ideapad\\src\\components\\features\\Features.js":"14","C:\\Dev\\ideapad\\src\\components\\features\\Feature.js":"15","C:\\Dev\\ideapad\\src\\components\\layout\\AppFooter.js":"16","C:\\Dev\\ideapad\\src\\context\\GlobalContext.js":"17","C:\\Dev\\ideapad\\src\\components\\pages\\FeaturePage.js":"18","C:\\Dev\\ideapad\\src\\components\\FeaturesWrapper.js":"19","C:\\Dev\\ideapad\\src\\context\\TasksContext.js":"20","C:\\Dev\\ideapad\\src\\components\\tasks\\Tasks.js":"21"},{"size":561,"mtime":1611342172227,"results":"22","hashOfConfig":"23"},{"size":5064,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2015,"mtime":1611353163800,"results":"25","hashOfConfig":"23"},{"size":748,"mtime":1611350941436,"results":"26","hashOfConfig":"23"},{"size":1104,"mtime":1611353547242,"results":"27","hashOfConfig":"23"},{"size":1356,"mtime":1611353299060,"results":"28","hashOfConfig":"23"},{"size":3244,"mtime":1611350941430,"results":"29","hashOfConfig":"23"},{"size":2738,"mtime":1611353497982,"results":"30","hashOfConfig":"23"},{"size":2311,"mtime":1611353410932,"results":"31","hashOfConfig":"23"},{"size":272,"mtime":1610940175062,"results":"32","hashOfConfig":"23"},{"size":1173,"mtime":1611350941434,"results":"33","hashOfConfig":"23"},{"size":4937,"mtime":1611350941431,"results":"34","hashOfConfig":"23"},{"size":3713,"mtime":1611353246550,"results":"35","hashOfConfig":"23"},{"size":2424,"mtime":1611350941427,"results":"36","hashOfConfig":"23"},{"size":1653,"mtime":1610873897759,"results":"37","hashOfConfig":"23"},{"size":871,"mtime":1611352734545,"results":"38","hashOfConfig":"23"},{"size":1991,"mtime":1611350941434,"results":"39","hashOfConfig":"23"},{"size":5687,"mtime":1611350941431,"results":"40","hashOfConfig":"23"},{"size":516,"mtime":1611350941426,"results":"41","hashOfConfig":"23"},{"size":3665,"mtime":1611350941435,"results":"42","hashOfConfig":"23"},{"size":2031,"mtime":1611351430524,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"f0ig6p",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"46"},"C:\\Dev\\ideapad\\src\\index.js",[],["93","94"],"C:\\Dev\\ideapad\\src\\serviceWorkerRegistration.js",[],"C:\\Dev\\ideapad\\src\\context\\AuthContext.js",["95"],"C:\\Dev\\ideapad\\src\\firebase.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\App.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\AppNav.js",[],"C:\\Dev\\ideapad\\src\\components\\pages\\Dashboard.js",["96"],"import { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport ProjectsProvider from \"../../context/ProjectsContext\";\r\nimport { useGlobal } from \"../../context/GlobalContext\";\r\nimport Project from \"../projects/Project\";\r\nimport { Button, Input, message, Modal } from \"antd\";\r\nimport \"../../styles/dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useAuth();\r\n  const { projects, getProjects, createProject } = useGlobal();\r\n  const [addNewProject, setAddNewProject] = useState(false);\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const unsubscribe = getProjects();\r\n\r\n      return unsubscribe;\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddNewProject((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (!title) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n\r\n    createProject(title, description);\r\n    setTitle(null);\r\n    setDescription(null);\r\n    setAddNewProject(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setAddNewProject(false);\r\n  };\r\n\r\n  if (currentUser) {\r\n    return (\r\n      <section className=\"dashboard\">\r\n        {addNewProject && (\r\n          <Modal\r\n            title=\"Create New Project\"\r\n            visible={addNewProject}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>,\r\n              <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                Add Project\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <section className=\"create-project\">\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Project Title\"\r\n              />\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Project Description\"\r\n              />\r\n            </section>\r\n          </Modal>\r\n        )}\r\n        <section className=\"projects-container\">\r\n          {/* <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              connectGoogleAccount();\r\n            }}\r\n          >\r\n            Connect your Google account\r\n          </Button> */}\r\n          <h3>Your Projects</h3>\r\n          <Button className=\"add-project\" type=\"primary\" onClick={handleClick}>\r\n            Create New Project\r\n          </Button>\r\n          {projects &&\r\n            projects.map((project, ind) => (\r\n              <ProjectsProvider>\r\n                <Project className=\"project\" project={project} key={ind} />\r\n              </ProjectsProvider>\r\n            ))}\r\n        </section>\r\n      </section>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\SignUp.js",[],"C:\\Dev\\ideapad\\src\\components\\pages\\Login.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\Alert.js",[],"C:\\Dev\\ideapad\\src\\context\\ProjectsContext.js",[],"C:\\Dev\\ideapad\\src\\components\\projects\\Project.js",[],"C:\\Dev\\ideapad\\src\\context\\FeaturesContext.js",[],"C:\\Dev\\ideapad\\src\\components\\features\\Features.js",["97","98"],"import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFeatures } from \"../../context/FeaturesContext\";\r\nimport { List, message, Popconfirm, Progress } from \"antd\";\r\nimport { DeleteFilled } from \"@ant-design/icons\";\r\nimport \"../../styles/features.css\";\r\n\r\nconst Features = (props) => {\r\n  const { id } = props;\r\n  const {\r\n    features,\r\n    getFeatures,\r\n    deleteFeature,\r\n    markAsCompleted,\r\n    getProgress,\r\n  } = useFeatures();\r\n\r\n  useEffect(() => {\r\n    getFeatures(id);\r\n  }, []);\r\n\r\n  const handleDelete = (featId) => {\r\n    try {\r\n      deleteFeature(id, featId);\r\n      message.success(\"Feature deleted successfully.\");\r\n    } catch (e) {\r\n      message.error(\"There was a problem deleting the feature.\");\r\n    }\r\n  };\r\n\r\n  if (features) {\r\n    return (\r\n      <section className=\"features-container\">\r\n        <Progress\r\n          className=\"progress-bar\"\r\n          percent={getProgress()}\r\n          status=\"active\"\r\n          strokeColor={\"#06d6a0\"}\r\n        />\r\n        {features && (\r\n          <List\r\n            dataSource={features}\r\n            itemLayout=\"horizontal\"\r\n            renderItem={(item) => (\r\n              <Link to={\"/project/\" + id + \"/feature/\" + item.id}>\r\n                <List.Item key={item.title}>\r\n                  <List.Item.Meta\r\n                    title={item.title}\r\n                    description={item.description}\r\n                  />\r\n                  <Progress\r\n                    className=\"progress-bar-small\"\r\n                    type=\"circle\"\r\n                    percent={getProgress()}\r\n                    status=\"active\"\r\n                    width={50}\r\n                    strokeColor={\"#118ab2\"}\r\n                  />\r\n                  <Popconfirm\r\n                    title=\"Are you sure you want to delete this feature?\"\r\n                    onConfirm={() => handleDelete(item.id)}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                  >\r\n                    <DeleteFilled id=\"deleteFeature\" className=\"action\" />\r\n                  </Popconfirm>\r\n                </List.Item>\r\n              </Link>\r\n            )}\r\n          ></List>\r\n        )}\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section className=\"features-container\">\r\n        <h5>There are no features to display yet...</h5>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Features;\r\n","C:\\Dev\\ideapad\\src\\components\\features\\Feature.js",[],["99","100"],"C:\\Dev\\ideapad\\src\\components\\layout\\AppFooter.js",[],"C:\\Dev\\ideapad\\src\\context\\GlobalContext.js",[],"C:\\Dev\\ideapad\\src\\components\\pages\\FeaturePage.js",["101","102"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFeatures } from \"../../context/FeaturesContext\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useTasks } from \"../../context/TasksContext\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  Popconfirm,\r\n  Progress,\r\n} from \"antd\";\r\nimport {\r\n  CheckOutlined,\r\n  DeleteFilled,\r\n  EditFilled,\r\n  PlusSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../../styles/featurepage.css\";\r\nimport Tasks from \"../tasks/Tasks\";\r\n\r\nconst FeaturePage = (props) => {\r\n  const { projectId, featureId } = props;\r\n  const { currentUser } = useAuth();\r\n  const { createTask } = useTasks();\r\n  const { Meta } = Card;\r\n  const {\r\n    feature,\r\n    getFeature,\r\n    editFeature,\r\n    deleteFeature,\r\n    markAsCompleted,\r\n  } = useFeatures();\r\n  const history = useHistory();\r\n  const [edit, setEdit] = useState(false);\r\n  const [newTitle, setNewTitle] = useState();\r\n  const [newDescription, setNewDescription] = useState();\r\n  const [newTask, setNewTask] = useState(false);\r\n  const [taskTitle, setTaskTitle] = useState();\r\n  const [taskDescription, setTaskDescription] = useState();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const unsubscribe = getFeature(projectId, featureId);\r\n\r\n      return unsubscribe;\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleDelete = () => {\r\n    deleteFeature(projectId, featureId);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (!newTitle) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n    editFeature(projectId, featureId, newTitle, newDescription);\r\n    setNewTitle(null);\r\n    setNewDescription(null);\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleNewTaskClick = () => {\r\n    setNewTask(true);\r\n  };\r\n\r\n  const handleCompletedToggle = (prevCompleted) => {\r\n    markAsCompleted(projectId, featureId, prevCompleted);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (!taskTitle) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n    createTask(projectId, featureId, taskTitle, taskDescription);\r\n    setTaskTitle(null);\r\n    setTaskDescription(null);\r\n    setNewTask(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setNewTask(false);\r\n  };\r\n\r\n  if (!feature) {\r\n    return (\r\n      <section className=\"feature-page\">\r\n        <h3>No feature was found :(</h3>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"feature-page\">\r\n      {edit && (\r\n        <Modal\r\n          title=\"Edit Feature\"\r\n          visible={edit}\r\n          onOk={handleEditOk}\r\n          onCancel={handleEditCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleEditCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleEditOk}>\r\n              Update Project\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <section className=\"project-form\">\r\n            <Input\r\n              className=\"project-input\"\r\n              type=\"text\"\r\n              value={feature.title}\r\n              onChange={(e) => setNewTitle(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              className=\"project-input\"\r\n              type=\"text\"\r\n              value={feature.description}\r\n              onChange={(e) => setNewDescription(e.target.value)}\r\n            />\r\n          </section>\r\n        </Modal>\r\n      )}\r\n      <Card>\r\n        <Meta title={feature.title} description={feature.description} />\r\n        <section className=\"project-actions\">\r\n          <EditFilled id=\"edit\" className=\"action\" onClick={handleEdit} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this project?\"\r\n            onConfirm={handleDelete}\r\n            okText=\"Delete\"\r\n            cancelText=\"Cancel\"\r\n          >\r\n            <DeleteFilled id=\"delete\" className=\"action\" />\r\n          </Popconfirm>\r\n          <span className=\"add-ft-btn\">\r\n            <PlusSquareOutlined\r\n              id=\"add\"\r\n              className=\"action\"\r\n              onClick={handleNewTaskClick}\r\n            />\r\n          </span>\r\n          <CheckOutlined\r\n            className={\"check action \" + (feature.completed ? \"completed\" : \"\")}\r\n            onClick={() => handleCompletedToggle(feature.completed)}\r\n          />\r\n        </section>\r\n        {newTask && (\r\n          <Modal\r\n            title=\"Create New Task\"\r\n            visible={newTask}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>,\r\n              <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                Add Task\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <section>\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={taskTitle}\r\n                onChange={(e) => setTaskTitle(e.target.value)}\r\n                placeholder=\"Task Title\"\r\n              />\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={taskDescription}\r\n                onChange={(e) => setTaskDescription(e.target.value)}\r\n                placeholder=\"Task Description\"\r\n              />\r\n            </section>\r\n          </Modal>\r\n        )}\r\n\r\n        <Tasks projectId={projectId} featureId={featureId} />\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FeaturePage;\r\n","C:\\Dev\\ideapad\\src\\components\\FeaturesWrapper.js",[],"C:\\Dev\\ideapad\\src\\context\\TasksContext.js",["103"],"import { createContext, useContext, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { message } from \"antd\";\r\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\r\n\r\nconst TasksContext = createContext();\r\n\r\nconst TasksProvider = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const [tasks, setTasks] = useState();\r\n\r\n  const createTask = async (\r\n    projectId,\r\n    featureId,\r\n    title,\r\n    description = null\r\n  ) => {\r\n    try {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .collection(\"features\")\r\n        .doc(featureId)\r\n        .collection(\"userTasks\")\r\n        .add({\r\n          title: title,\r\n          description: description,\r\n          completed: false,\r\n        });\r\n\r\n      message.success(\"Task created successfully.\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getTasks = async (projectId, featureId) => {\r\n    try {\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .collection(\"features\")\r\n        .doc(featureId)\r\n        .collection(\"userTasks\")\r\n        .onSnapshot((qs) => {\r\n          let taskList = [];\r\n          qs.forEach((doc) => {\r\n            const task = doc.data();\r\n            task.id = doc.id;\r\n            taskList.push(task);\r\n          });\r\n          setTasks(taskList);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (projectId, featureId, taskId) => {\r\n    try {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .collection(\"features\")\r\n        .doc(featureId)\r\n        .collection(\"userTasks\")\r\n        .doc(taskId)\r\n        .delete();\r\n\r\n      message.success(\"Task deleted successfully.\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = async (\r\n    projectId,\r\n    featureId,\r\n    taskId,\r\n    prevCompleted\r\n  ) => {\r\n    if (prevCompleted) {\r\n      try {\r\n        await db\r\n          .collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"projects\")\r\n          .doc(projectId)\r\n          .collection(\"features\")\r\n          .doc(featureId)\r\n          .collection(\"userTasks\")\r\n          .doc(taskId)\r\n          .update({\r\n            completed: false,\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      try {\r\n        await db\r\n          .collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"projects\")\r\n          .doc(projectId)\r\n          .collection(\"features\")\r\n          .doc(featureId)\r\n          .collection(\"userTasks\")\r\n          .doc(taskId)\r\n          .update({\r\n            completed: true,\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProgress = () => {\r\n    let totalTasks = 0;\r\n    let completedTasks = 0;\r\n    tasks.forEach((task) => {\r\n      totalTasks += 1;\r\n      if (task.completed) {\r\n        completedTasks += 1;\r\n      }\r\n    });\r\n    let progress = completedTasks / totalTasks;\r\n    return Math.floor(progress * 100);\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider\r\n      value={{\r\n        tasks,\r\n        createTask,\r\n        getTasks,\r\n        deleteTask,\r\n        markAsCompleted,\r\n        getProgress,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTasks = () => {\r\n  return useContext(TasksContext);\r\n};\r\n\r\nexport default TasksProvider;\r\n","C:\\Dev\\ideapad\\src\\components\\tasks\\Tasks.js",["104"],"import { useEffect } from \"react\";\r\nimport { useTasks } from \"../../context/TasksContext\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { List, Popconfirm, Progress } from \"antd\";\r\nimport { CheckOutlined, DeleteFilled } from \"@ant-design/icons\";\r\nimport \"../../styles/tasks.css\";\r\n\r\nconst Tasks = (props) => {\r\n  const { projectId, featureId } = props;\r\n  const {\r\n    tasks,\r\n    getTasks,\r\n    deleteTask,\r\n    markAsCompleted,\r\n    getProgress,\r\n  } = useTasks();\r\n  const { currentUser } = useAuth();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const unsubscribe = getTasks(projectId, featureId);\r\n\r\n      return unsubscribe;\r\n    }\r\n  }, [currentUser, projectId, featureId]);\r\n\r\n  const handleDelete = (taskId) => {\r\n    deleteTask(projectId, featureId, taskId);\r\n  };\r\n\r\n  const handleCompletedToggle = (taskId, prevCompleted) => {\r\n    markAsCompleted(projectId, featureId, taskId, prevCompleted);\r\n  };\r\n\r\n  return (\r\n    <section className=\"tasks\">\r\n      {tasks && (\r\n        <Progress\r\n          className=\"progress-bar\"\r\n          percent={getProgress()}\r\n          status=\"active\"\r\n          strokeColor={\"#06d6a0\"}\r\n        />\r\n      )}\r\n      <List\r\n        dataSource={tasks}\r\n        itemLayout=\"horizontal\"\r\n        renderItem={(item) => (\r\n          <List.Item key={item.title}>\r\n            <List.Item.Meta title={item.title} description={item.description} />\r\n            <Popconfirm\r\n              title=\"Are you sure you want to delete this task?\"\r\n              onConfirm={() => handleDelete(item.id)}\r\n              okText=\"Delete\"\r\n              cancelText=\"Cancel\"\r\n            >\r\n              <DeleteFilled id=\"deleteFeature\" className=\"action\" />\r\n            </Popconfirm>\r\n            <CheckOutlined\r\n              className={\"check \" + (item.completed ? \"completed\" : \"\")}\r\n              onClick={() => handleCompletedToggle(item.id, item.completed)}\r\n            />\r\n          </List.Item>\r\n        )}\r\n      ></List>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n",{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":17},{"ruleId":"113","severity":1,"message":"114","line":23,"column":6,"nodeType":"115","endLine":23,"endColumn":19,"suggestions":"116"},{"ruleId":"109","severity":1,"message":"117","line":14,"column":5,"nodeType":"111","messageId":"112","endLine":14,"endColumn":20},{"ruleId":"113","severity":1,"message":"118","line":20,"column":6,"nodeType":"115","endLine":20,"endColumn":8,"suggestions":"119"},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"109","severity":1,"message":"122","line":13,"column":3,"nodeType":"111","messageId":"112","endLine":13,"endColumn":11},{"ruleId":"113","severity":1,"message":"123","line":50,"column":6,"nodeType":"115","endLine":50,"endColumn":19,"suggestions":"124"},{"ruleId":"109","severity":1,"message":"125","line":5,"column":10,"nodeType":"111","messageId":"112","endLine":5,"endColumn":28},{"ruleId":"113","severity":1,"message":"126","line":25,"column":6,"nodeType":"115","endLine":25,"endColumn":41,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["130"],"'markAsCompleted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFeatures' and 'id'. Either include them or remove the dependency array.",["131"],["128"],["129"],"'Progress' is defined but never used.","React Hook useEffect has missing dependencies: 'featureId', 'getFeature', and 'projectId'. Either include them or remove the dependency array.",["132"],"'ConsoleSqlOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [currentUser, getProjects]",{"range":"142","text":"143"},"Update the dependencies array to be: [getFeatures, id]",{"range":"144","text":"145"},"Update the dependencies array to be: [currentUser, featureId, getFeature, projectId]",{"range":"146","text":"147"},"Update the dependencies array to be: [currentUser, projectId, featureId, getTasks]",{"range":"148","text":"149"},[822,835],"[currentUser, getProjects]",[523,525],"[getFeatures, id]",[1358,1371],"[currentUser, featureId, getFeature, projectId]",[670,705],"[currentUser, projectId, featureId, getTasks]"]