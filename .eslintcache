[{"C:\\Dev\\ideapad\\src\\index.js":"1","C:\\Dev\\ideapad\\src\\serviceWorkerRegistration.js":"2","C:\\Dev\\ideapad\\src\\context\\AuthContext.js":"3","C:\\Dev\\ideapad\\src\\firebase.js":"4","C:\\Dev\\ideapad\\src\\components\\layout\\App.js":"5","C:\\Dev\\ideapad\\src\\components\\layout\\AppNav.js":"6","C:\\Dev\\ideapad\\src\\components\\pages\\Dashboard.js":"7","C:\\Dev\\ideapad\\src\\components\\pages\\SignUp.js":"8","C:\\Dev\\ideapad\\src\\components\\pages\\Login.js":"9","C:\\Dev\\ideapad\\src\\components\\layout\\Alert.js":"10","C:\\Dev\\ideapad\\src\\context\\AlertsContext.js":"11","C:\\Dev\\ideapad\\src\\context\\ProjectsContext.js":"12","C:\\Dev\\ideapad\\src\\components\\projects\\Project.js":"13","C:\\Dev\\ideapad\\src\\context\\FeaturesContext.js":"14","C:\\Dev\\ideapad\\src\\components\\features\\Features.js":"15","C:\\Dev\\ideapad\\src\\components\\features\\Feature.js":"16","C:\\Dev\\ideapad\\src\\components\\layout\\AppFooter.js":"17","C:\\Dev\\ideapad\\src\\context\\GlobalContext.js":"18","C:\\Dev\\ideapad\\src\\components\\pages\\FeaturePage.js":"19","C:\\Dev\\ideapad\\src\\components\\FeaturesWrapper.js":"20"},{"size":561,"mtime":1611272296001,"results":"21","hashOfConfig":"22"},{"size":5064,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":1982,"mtime":1611264090949,"results":"24","hashOfConfig":"22"},{"size":642,"mtime":1610416489366,"results":"25","hashOfConfig":"22"},{"size":1208,"mtime":1611285928169,"results":"26","hashOfConfig":"22"},{"size":1499,"mtime":1611288497995,"results":"27","hashOfConfig":"22"},{"size":3244,"mtime":1611274254356,"results":"28","hashOfConfig":"22"},{"size":2943,"mtime":1611262746648,"results":"29","hashOfConfig":"22"},{"size":2496,"mtime":1611262740431,"results":"30","hashOfConfig":"22"},{"size":272,"mtime":1610940175062,"results":"31","hashOfConfig":"22"},{"size":657,"mtime":1610411621823,"results":"32","hashOfConfig":"22"},{"size":1173,"mtime":1611271782675,"results":"33","hashOfConfig":"22"},{"size":4933,"mtime":1611289121229,"results":"34","hashOfConfig":"22"},{"size":3643,"mtime":1611287203920,"results":"35","hashOfConfig":"22"},{"size":2544,"mtime":1611285820924,"results":"36","hashOfConfig":"22"},{"size":1653,"mtime":1610873897759,"results":"37","hashOfConfig":"22"},{"size":623,"mtime":1611262970676,"results":"38","hashOfConfig":"22"},{"size":2016,"mtime":1611272214346,"results":"39","hashOfConfig":"22"},{"size":3447,"mtime":1611289360635,"results":"40","hashOfConfig":"22"},{"size":436,"mtime":1611285016176,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"f0ig6p",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"44"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Dev\\ideapad\\src\\index.js",[],["91","92"],"C:\\Dev\\ideapad\\src\\serviceWorkerRegistration.js",[],"C:\\Dev\\ideapad\\src\\context\\AuthContext.js",[],"C:\\Dev\\ideapad\\src\\firebase.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\App.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\AppNav.js",["93","94"],"import { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button } from \"antd\";\r\nimport { useAlerts } from \"../../context/AlertsContext\";\r\nimport Alert from \"../layout/Alert\";\r\nimport \"../../styles/nav.css\";\r\n\r\nconst AppNav = () => {\r\n  const { currentUser, signOut } = useAuth();\r\n  const history = useHistory();\r\n  const { alert, createAlert } = useAlerts();\r\n\r\n  const handleSignOut = () => {\r\n    signOut();\r\n    createAlert(\"Success\", \"You have been signed out.\");\r\n  };\r\n\r\n  const redirectToLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const redirectToSignup = () => {\r\n    history.push(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link to=\"/\">\r\n        <section className=\"brand\">\r\n          <span className=\"thin\">idea</span>\r\n          <span className=\"medium\">Pad</span>\r\n        </section>\r\n      </Link>\r\n      {currentUser ? (\r\n        <Button className=\"auth-button\" type=\"text\" onClick={handleSignOut}>\r\n          Sign Out\r\n        </Button>\r\n      ) : (\r\n        <section>\r\n          <Button className=\"auth-button\" type=\"text\" onClick={redirectToLogin}>\r\n            Sign In\r\n          </Button>\r\n          <span id=\"divider\">|</span>\r\n          <Button\r\n            className=\"auth-button\"\r\n            type=\"text\"\r\n            onClick={redirectToSignup}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </section>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AppNav;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\Dashboard.js",["95"],"import { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport ProjectsProvider from \"../../context/ProjectsContext\";\r\nimport { useGlobal } from \"../../context/GlobalContext\";\r\nimport Project from \"../projects/Project\";\r\nimport { Button, Input, message, Modal } from \"antd\";\r\nimport \"../../styles/dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useAuth();\r\n  const { projects, getProjects, createProject } = useGlobal();\r\n  const [addNewProject, setAddNewProject] = useState(false);\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const unsubscribe = getProjects();\r\n\r\n      return unsubscribe;\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddNewProject((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (!title) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n\r\n    createProject(title, description);\r\n    setTitle(null);\r\n    setDescription(null);\r\n    setAddNewProject(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setAddNewProject(false);\r\n  };\r\n\r\n  if (currentUser) {\r\n    return (\r\n      <section className=\"dashboard\">\r\n        {addNewProject && (\r\n          <Modal\r\n            title=\"Create New Project\"\r\n            visible={addNewProject}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>,\r\n              <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                Add Project\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <section className=\"create-project\">\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Project Title\"\r\n              />\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Project Description\"\r\n              />\r\n            </section>\r\n          </Modal>\r\n        )}\r\n        <section className=\"projects-container\">\r\n          {/* <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              connectGoogleAccount();\r\n            }}\r\n          >\r\n            Connect your Google account\r\n          </Button> */}\r\n          <h3>Your Projects</h3>\r\n          <Button className=\"add-project\" type=\"primary\" onClick={handleClick}>\r\n            Create New Project\r\n          </Button>\r\n          {projects &&\r\n            projects.map((project, ind) => (\r\n              <ProjectsProvider>\r\n                <Project className=\"project\" project={project} key={ind} />\r\n              </ProjectsProvider>\r\n            ))}\r\n        </section>\r\n      </section>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\SignUp.js",["96"],"import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useAlerts } from \"../../context/AlertsContext\";\r\nimport Alert from \"../layout/Alert\";\r\nimport { Button, Input } from \"antd\";\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport \"../../styles/signup.css\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirm, setConfirm] = useState();\r\n  const { currentUser, signUpWithEmail, signInWithGoogle } = useAuth();\r\n  const { alert, createAlert } = useAlerts();\r\n  const history = useHistory();\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (email && password && confirm) {\r\n        handleSubmit(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      return createAlert(\"Error\", \"Passwords do not match.\");\r\n    }\r\n\r\n    if (!email || !password || !confirm) {\r\n      return createAlert(\"Error\", \"All fields must be completed.\");\r\n    }\r\n\r\n    try {\r\n      await signUpWithEmail(email, password);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      createAlert(\"Error\", e.message);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = () => {\r\n    try {\r\n      signInWithGoogle();\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-form\">\r\n      <h2>Sign Up</h2>\r\n      {alert && <Alert type={alert.type} message={alert.message} />}\r\n      <Input\r\n        className=\"auth-input\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n      <Input.Password\r\n        className=\"auth-input\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        onKeyDown={handleKeyDown}\r\n        iconRender={(visible) =>\r\n          visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n        }\r\n        required\r\n      />\r\n      <Input.Password\r\n        className=\"auth-input\"\r\n        type=\"password\"\r\n        value={confirm}\r\n        onChange={(e) => setConfirm(e.target.value)}\r\n        placeholder=\"Confirm password\"\r\n        iconRender={(visible) =>\r\n          visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n        }\r\n        required\r\n      />\r\n      <Button\r\n        size=\"large\"\r\n        type=\"primary\"\r\n        className=\"submit\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Create Account\r\n      </Button>\r\n      <Button\r\n        size=\"large\"\r\n        type=\"primary\"\r\n        className=\"google-btn\"\r\n        onClick={() => handleGoogleSignIn()}\r\n      >\r\n        Sign Up with Google\r\n      </Button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\Login.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\Alert.js",[],"C:\\Dev\\ideapad\\src\\context\\AlertsContext.js",[],"C:\\Dev\\ideapad\\src\\context\\ProjectsContext.js",[],"C:\\Dev\\ideapad\\src\\components\\projects\\Project.js",["97","98"],"import { useState } from \"react\";\r\nimport { useProjects } from \"../../context/ProjectsContext\";\r\nimport FeaturesProvider from \"../../context/FeaturesContext\";\r\nimport Features from \"../features/Features\";\r\nimport { Button, Card, Input, message, Modal, Popconfirm } from \"antd\";\r\nimport \"../../styles/project.css\";\r\nimport {\r\n  DeleteFilled,\r\n  EditFilled,\r\n  PlusSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { useGlobal } from \"../../context/GlobalContext\";\r\n\r\nconst Project = (props) => {\r\n  const { id, title, description } = props.project;\r\n  const [newTitle, setNewTitle] = useState();\r\n  const [newDescription, setNewDescription] = useState();\r\n  const { editProject, deleteProject } = useProjects();\r\n  const { createFeature } = useGlobal();\r\n  const [edit, setEdit] = useState(false);\r\n  const [feature, setFeature] = useState(false);\r\n  const [featureTitle, setFeatureTitle] = useState();\r\n  const [featureDescription, setFeatureDescription] = useState();\r\n  const { Meta } = Card;\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (!newTitle) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n    editProject(id, newTitle, newDescription);\r\n    newTitle = null;\r\n    newDescription = null;\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleNewFeatureClick = () => {\r\n    setFeature((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (!featureTitle) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n\r\n    createFeature(id, featureTitle, featureDescription);\r\n    setFeatureTitle(null);\r\n    setFeatureDescription(null);\r\n    setFeature(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setFeature(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteProject(id);\r\n  };\r\n\r\n  return (\r\n    <section className=\"project\">\r\n      {edit && (\r\n        <Modal\r\n          title=\"Edit Project\"\r\n          visible={edit}\r\n          onOk={handleEditOk}\r\n          onCancel={handleEditCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleEditCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleEditOk}>\r\n              Update Project\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <section className=\"project-form\">\r\n            <Input\r\n              className=\"project-input\"\r\n              type=\"text\"\r\n              value={newTitle}\r\n              onChange={(e) => setNewTitle(e.target.value)}\r\n              placeholder={title}\r\n              default={title}\r\n            />\r\n\r\n            <Input\r\n              className=\"project-input\"\r\n              type=\"text\"\r\n              value={newDescription}\r\n              onChange={(e) => setNewDescription(e.target.value)}\r\n              placeholder={description}\r\n            />\r\n          </section>\r\n        </Modal>\r\n      )}\r\n      <Card>\r\n        <Meta title={title} description={description} />\r\n        <section className=\"project-actions\">\r\n          <EditFilled id=\"edit\" className=\"action\" onClick={handleEdit} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this project?\"\r\n            onConfirm={handleDelete}\r\n            okText=\"Delete\"\r\n            cancelText=\"Cancel\"\r\n          >\r\n            <DeleteFilled id=\"delete\" className=\"action\" />\r\n          </Popconfirm>\r\n          <span className=\"add-ft-btn\">\r\n            <PlusSquareOutlined\r\n              id=\"add\"\r\n              className=\"action\"\r\n              onClick={handleNewFeatureClick}\r\n            />\r\n          </span>\r\n        </section>\r\n        {feature && (\r\n          <Modal\r\n            title=\"Create New Feature\"\r\n            visible={feature}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>,\r\n              <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                Add Feature\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <section>\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={featureTitle}\r\n                onChange={(e) => setFeatureTitle(e.target.value)}\r\n                placeholder=\"Feature Title\"\r\n              />\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={featureDescription}\r\n                onChange={(e) => setFeatureDescription(e.target.value)}\r\n                placeholder=\"Feature Description\"\r\n              />\r\n            </section>\r\n          </Modal>\r\n        )}\r\n        <FeaturesProvider>\r\n          <Features id={id} />\r\n        </FeaturesProvider>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","C:\\Dev\\ideapad\\src\\context\\FeaturesContext.js",[],"C:\\Dev\\ideapad\\src\\components\\features\\Features.js",["99"],"import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFeatures } from \"../../context/FeaturesContext\";\r\nimport { List, message, Popconfirm, Progress } from \"antd\";\r\nimport { CheckOutlined, DeleteFilled } from \"@ant-design/icons\";\r\nimport \"../../styles/features.css\";\r\n\r\nconst Features = (props) => {\r\n  const { id } = props;\r\n  const {\r\n    features,\r\n    getFeatures,\r\n    deleteFeature,\r\n    markAsCompleted,\r\n    getProgress,\r\n  } = useFeatures();\r\n\r\n  useEffect(() => {\r\n    getFeatures(id);\r\n  }, []);\r\n\r\n  const handleCompletedToggle = (featureId, prevCompleted) => {\r\n    markAsCompleted(id, featureId, prevCompleted);\r\n  };\r\n\r\n  const handleDelete = (featId) => {\r\n    try {\r\n      deleteFeature(id, featId);\r\n      message.success(\"Feature deleted successfully.\");\r\n    } catch (e) {\r\n      message.error(\"There was a problem deleting the feature.\");\r\n    }\r\n  };\r\n\r\n  if (features) {\r\n    return (\r\n      <section className=\"features-container\">\r\n        {}\r\n        <Progress\r\n          className=\"progress-bar\"\r\n          percent={getProgress()}\r\n          status=\"active\"\r\n          strokeColor={\"#06d6a0\"}\r\n        />\r\n        {features && (\r\n          <List\r\n            dataSource={features}\r\n            itemLayout=\"horizontal\"\r\n            renderItem={(item) => (\r\n              <Link to={\"/project/\" + id + \"/feature/\" + item.id}>\r\n                <List.Item key={item.title}>\r\n                  <List.Item.Meta\r\n                    title={item.title}\r\n                    description={item.description}\r\n                  />\r\n                  <Popconfirm\r\n                    title=\"Are you sure you want to delete this feature?\"\r\n                    onConfirm={() => handleDelete(item.id)}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                  >\r\n                    <DeleteFilled id=\"deleteFeature\" className=\"action\" />\r\n                  </Popconfirm>\r\n                  <CheckOutlined\r\n                    className={\"check \" + (item.completed ? \"completed\" : \"\")}\r\n                    onClick={() =>\r\n                      handleCompletedToggle(item.id, item.completed)\r\n                    }\r\n                  />\r\n                </List.Item>\r\n              </Link>\r\n            )}\r\n          ></List>\r\n        )}\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section className=\"features-container\">\r\n        <h5>There are no features to display yet...</h5>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Features;\r\n",["100","101"],"C:\\Dev\\ideapad\\src\\components\\features\\Feature.js",[],["102","103"],"C:\\Dev\\ideapad\\src\\components\\layout\\AppFooter.js",[],"C:\\Dev\\ideapad\\src\\context\\GlobalContext.js",[],"C:\\Dev\\ideapad\\src\\components\\pages\\FeaturePage.js",["104","105","106","107"],"import { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useFeatures } from \"../../context/FeaturesContext\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button, Card, Input, message, Modal, Popconfirm } from \"antd\";\r\nimport {\r\n  DeleteFilled,\r\n  EditFilled,\r\n  PlusSquareOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"../../styles/featurepage.css\";\r\n\r\nconst FeaturePage = (props) => {\r\n  const { projectId, featureId } = props;\r\n  const { currentUser } = useAuth();\r\n  const { Meta } = Card;\r\n  const { feature, getFeature, editFeature, deleteFeature } = useFeatures();\r\n  const history = useHistory();\r\n  const [edit, setEdit] = useState(false);\r\n  const [newTitle, setNewTitle] = useState();\r\n  const [newDescription, setNewDescription] = useState();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const unsubscribe = getFeature(projectId, featureId);\r\n\r\n      return unsubscribe;\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleDelete = () => {\r\n    deleteFeature(projectId, featureId);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    setEdit(true);\r\n  };\r\n\r\n  const handleEditOk = () => {\r\n    if (!newTitle) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n    editFeature(projectId, featureId, newTitle, newDescription);\r\n    newTitle = null;\r\n    newDescription = null;\r\n    setEdit(false);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEdit(false);\r\n  };\r\n\r\n  if (!feature) {\r\n    return (\r\n      <section className=\"feature-page\">\r\n        <h3>No feature was found :(</h3>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <section className=\"feature-page\">\r\n      {edit && (\r\n        <Modal\r\n          title=\"Edit Feature\"\r\n          visible={edit}\r\n          onOk={handleEditOk}\r\n          onCancel={handleEditCancel}\r\n          footer={[\r\n            <Button key=\"back\" onClick={handleEditCancel}>\r\n              Cancel\r\n            </Button>,\r\n            <Button key=\"submit\" type=\"primary\" onClick={handleEditOk}>\r\n              Update Project\r\n            </Button>,\r\n          ]}\r\n        >\r\n          <section className=\"project-form\">\r\n            <Input\r\n              className=\"project-input\"\r\n              type=\"text\"\r\n              value={feature.title}\r\n              onChange={(e) => setNewTitle(e.target.value)}\r\n            />\r\n\r\n            <Input\r\n              className=\"project-input\"\r\n              type=\"text\"\r\n              value={feature.description}\r\n              onChange={(e) => setNewDescription(e.target.value)}\r\n            />\r\n          </section>\r\n        </Modal>\r\n      )}\r\n      <Card>\r\n        <Meta title={feature.title} description={feature.description} />\r\n        <section className=\"project-actions\">\r\n          <EditFilled id=\"edit\" className=\"action\" onClick={handleEdit} />\r\n          <Popconfirm\r\n            title=\"Are you sure you want to delete this project?\"\r\n            onConfirm={handleDelete}\r\n            okText=\"Delete\"\r\n            cancelText=\"Cancel\"\r\n          >\r\n            <DeleteFilled id=\"delete\" className=\"action\" />\r\n          </Popconfirm>\r\n          {/* <span className=\"add-ft-btn\">\r\n            <PlusSquareOutlined\r\n              id=\"add\"\r\n              className=\"action\"\r\n              onClick={handleEdit}\r\n            />\r\n          </span> */}\r\n        </section>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FeaturePage;\r\n","C:\\Dev\\ideapad\\src\\components\\FeaturesWrapper.js",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":5,"column":8,"nodeType":"114","messageId":"115","endLine":5,"endColumn":13},{"ruleId":"112","severity":1,"message":"116","line":11,"column":11,"nodeType":"114","messageId":"115","endLine":11,"endColumn":16},{"ruleId":"117","severity":1,"message":"118","line":23,"column":6,"nodeType":"119","endLine":23,"endColumn":19,"suggestions":"120"},{"ruleId":"112","severity":1,"message":"121","line":14,"column":11,"nodeType":"114","messageId":"115","endLine":14,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":35,"column":5,"nodeType":"114","messageId":"124","endLine":35,"endColumn":13},{"ruleId":"122","severity":1,"message":"125","line":36,"column":5,"nodeType":"114","messageId":"124","endLine":36,"endColumn":19},{"ruleId":"117","severity":1,"message":"126","line":20,"column":6,"nodeType":"119","endLine":20,"endColumn":8,"suggestions":"127"},{"ruleId":"108","replacedBy":"128"},{"ruleId":"110","replacedBy":"129"},{"ruleId":"108","replacedBy":"130"},{"ruleId":"110","replacedBy":"131"},{"ruleId":"112","severity":1,"message":"132","line":9,"column":3,"nodeType":"114","messageId":"115","endLine":9,"endColumn":21},{"ruleId":"117","severity":1,"message":"133","line":29,"column":6,"nodeType":"119","endLine":29,"endColumn":19,"suggestions":"134"},{"ruleId":"122","severity":1,"message":"123","line":45,"column":5,"nodeType":"114","messageId":"124","endLine":45,"endColumn":13},{"ruleId":"122","severity":1,"message":"125","line":46,"column":5,"nodeType":"114","messageId":"124","endLine":46,"endColumn":19},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","'alert' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["137"],"'currentUser' is assigned a value but never used.","no-const-assign","'newTitle' is constant.","const","'newDescription' is constant.","React Hook useEffect has missing dependencies: 'getFeatures' and 'id'. Either include them or remove the dependency array.",["138"],["135"],["136"],["135"],["136"],"'PlusSquareOutlined' is defined but never used.","React Hook useEffect has missing dependencies: 'featureId', 'getFeature', and 'projectId'. Either include them or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},"Update the dependencies array to be: [currentUser, getProjects]",{"range":"146","text":"147"},"Update the dependencies array to be: [getFeatures, id]",{"range":"148","text":"149"},"Update the dependencies array to be: [currentUser, featureId, getFeature, projectId]",{"range":"150","text":"151"},[822,835],"[currentUser, getProjects]",[538,540],"[getFeatures, id]",[970,983],"[currentUser, featureId, getFeature, projectId]"]