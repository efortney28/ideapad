[{"C:\\Dev\\ideapad\\src\\index.js":"1","C:\\Dev\\ideapad\\src\\serviceWorkerRegistration.js":"2","C:\\Dev\\ideapad\\src\\context\\AuthContext.js":"3","C:\\Dev\\ideapad\\src\\firebase.js":"4","C:\\Dev\\ideapad\\src\\components\\layout\\App.js":"5","C:\\Dev\\ideapad\\src\\components\\layout\\AppNav.js":"6","C:\\Dev\\ideapad\\src\\components\\pages\\Dashboard.js":"7","C:\\Dev\\ideapad\\src\\components\\pages\\SignUp.js":"8","C:\\Dev\\ideapad\\src\\components\\pages\\Login.js":"9","C:\\Dev\\ideapad\\src\\components\\layout\\Alert.js":"10","C:\\Dev\\ideapad\\src\\context\\AlertsContext.js":"11","C:\\Dev\\ideapad\\src\\context\\ProjectsContext.js":"12","C:\\Dev\\ideapad\\src\\components\\projects\\Project.js":"13","C:\\Dev\\ideapad\\src\\context\\FeaturesContext.js":"14","C:\\Dev\\ideapad\\src\\components\\features\\Features.js":"15","C:\\Dev\\ideapad\\src\\components\\features\\Feature.js":"16","C:\\Dev\\ideapad\\src\\components\\layout\\AppFooter.js":"17","C:\\Dev\\ideapad\\src\\context\\GlobalContext.js":"18","C:\\Dev\\ideapad\\src\\components\\pages\\FeaturePage.js":"19","C:\\Dev\\ideapad\\src\\components\\FeaturesWrapper.js":"20","C:\\Dev\\ideapad\\src\\context\\TasksContext.js":"21","C:\\Dev\\ideapad\\src\\components\\tasks\\Tasks.js":"22"},{"size":561,"mtime":1611342172227,"results":"23","hashOfConfig":"24"},{"size":5064,"mtime":499162500000,"results":"25","hashOfConfig":"24"},{"size":1982,"mtime":1611264090949,"results":"26","hashOfConfig":"24"},{"size":748,"mtime":1611344158359,"results":"27","hashOfConfig":"24"},{"size":1208,"mtime":1611285928169,"results":"28","hashOfConfig":"24"},{"size":1461,"mtime":1611343275709,"results":"29","hashOfConfig":"24"},{"size":3244,"mtime":1611274254356,"results":"30","hashOfConfig":"24"},{"size":2943,"mtime":1611262746648,"results":"31","hashOfConfig":"24"},{"size":2496,"mtime":1611262740431,"results":"32","hashOfConfig":"24"},{"size":272,"mtime":1610940175062,"results":"33","hashOfConfig":"24"},{"size":657,"mtime":1610411621823,"results":"34","hashOfConfig":"24"},{"size":1173,"mtime":1611271782675,"results":"35","hashOfConfig":"24"},{"size":4937,"mtime":1611343345798,"results":"36","hashOfConfig":"24"},{"size":3625,"mtime":1611343188584,"results":"37","hashOfConfig":"24"},{"size":2424,"mtime":1611350000347,"results":"38","hashOfConfig":"24"},{"size":1653,"mtime":1610873897759,"results":"39","hashOfConfig":"24"},{"size":623,"mtime":1611262970676,"results":"40","hashOfConfig":"24"},{"size":1991,"mtime":1611344446297,"results":"41","hashOfConfig":"24"},{"size":5687,"mtime":1611350819101,"results":"42","hashOfConfig":"24"},{"size":516,"mtime":1611343213063,"results":"43","hashOfConfig":"24"},{"size":3665,"mtime":1611348893537,"results":"44","hashOfConfig":"24"},{"size":1990,"mtime":1611350825921,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"f0ig6p",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Dev\\ideapad\\src\\index.js",[],["98","99"],"C:\\Dev\\ideapad\\src\\serviceWorkerRegistration.js",[],"C:\\Dev\\ideapad\\src\\context\\AuthContext.js",[],"C:\\Dev\\ideapad\\src\\firebase.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\App.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\AppNav.js",["100"],"import { useHistory, Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { Button } from \"antd\";\r\nimport { useAlerts } from \"../../context/AlertsContext\";\r\nimport \"../../styles/nav.css\";\r\n\r\nconst AppNav = () => {\r\n  const { currentUser, signOut } = useAuth();\r\n  const history = useHistory();\r\n  const { alert, createAlert } = useAlerts();\r\n\r\n  const handleSignOut = () => {\r\n    signOut();\r\n    createAlert(\"Success\", \"You have been signed out.\");\r\n  };\r\n\r\n  const redirectToLogin = () => {\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const redirectToSignup = () => {\r\n    history.push(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <nav className=\"nav\">\r\n      <Link to=\"/\">\r\n        <section className=\"brand\">\r\n          <span className=\"thin\">idea</span>\r\n          <span className=\"medium\">Pad</span>\r\n        </section>\r\n      </Link>\r\n      {currentUser ? (\r\n        <Button className=\"auth-button\" type=\"text\" onClick={handleSignOut}>\r\n          Sign Out\r\n        </Button>\r\n      ) : (\r\n        <section>\r\n          <Button className=\"auth-button\" type=\"text\" onClick={redirectToLogin}>\r\n            Sign In\r\n          </Button>\r\n          <span id=\"divider\">|</span>\r\n          <Button\r\n            className=\"auth-button\"\r\n            type=\"text\"\r\n            onClick={redirectToSignup}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n        </section>\r\n      )}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default AppNav;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\Dashboard.js",["101"],"import { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport ProjectsProvider from \"../../context/ProjectsContext\";\r\nimport { useGlobal } from \"../../context/GlobalContext\";\r\nimport Project from \"../projects/Project\";\r\nimport { Button, Input, message, Modal } from \"antd\";\r\nimport \"../../styles/dashboard.css\";\r\n\r\nconst Dashboard = () => {\r\n  const { currentUser } = useAuth();\r\n  const { projects, getProjects, createProject } = useGlobal();\r\n  const [addNewProject, setAddNewProject] = useState(false);\r\n  const [title, setTitle] = useState();\r\n  const [description, setDescription] = useState();\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      const unsubscribe = getProjects();\r\n\r\n      return unsubscribe;\r\n    }\r\n  }, [currentUser]);\r\n\r\n  const handleClick = (e) => {\r\n    e.preventDefault();\r\n\r\n    setAddNewProject((prevState) => !prevState);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    if (!title) {\r\n      return message.error(\"Title field must be completed.\");\r\n    }\r\n\r\n    createProject(title, description);\r\n    setTitle(null);\r\n    setDescription(null);\r\n    setAddNewProject(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setAddNewProject(false);\r\n  };\r\n\r\n  if (currentUser) {\r\n    return (\r\n      <section className=\"dashboard\">\r\n        {addNewProject && (\r\n          <Modal\r\n            title=\"Create New Project\"\r\n            visible={addNewProject}\r\n            onOk={handleOk}\r\n            onCancel={handleCancel}\r\n            footer={[\r\n              <Button key=\"back\" onClick={handleCancel}>\r\n                Cancel\r\n              </Button>,\r\n              <Button key=\"submit\" type=\"primary\" onClick={handleOk}>\r\n                Add Project\r\n              </Button>,\r\n            ]}\r\n          >\r\n            <section className=\"create-project\">\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                placeholder=\"Project Title\"\r\n              />\r\n              <Input\r\n                className=\"project-input\"\r\n                type=\"text\"\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"Project Description\"\r\n              />\r\n            </section>\r\n          </Modal>\r\n        )}\r\n        <section className=\"projects-container\">\r\n          {/* <Button\r\n            type=\"primary\"\r\n            onClick={() => {\r\n              connectGoogleAccount();\r\n            }}\r\n          >\r\n            Connect your Google account\r\n          </Button> */}\r\n          <h3>Your Projects</h3>\r\n          <Button className=\"add-project\" type=\"primary\" onClick={handleClick}>\r\n            Create New Project\r\n          </Button>\r\n          {projects &&\r\n            projects.map((project, ind) => (\r\n              <ProjectsProvider>\r\n                <Project className=\"project\" project={project} key={ind} />\r\n              </ProjectsProvider>\r\n            ))}\r\n        </section>\r\n      </section>\r\n    );\r\n  } else {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\SignUp.js",["102"],"import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../context/AuthContext\";\r\nimport { useAlerts } from \"../../context/AlertsContext\";\r\nimport Alert from \"../layout/Alert\";\r\nimport { Button, Input } from \"antd\";\r\nimport { EyeInvisibleOutlined, EyeTwoTone } from \"@ant-design/icons\";\r\nimport \"../../styles/signup.css\";\r\n\r\nconst SignUp = () => {\r\n  const [email, setEmail] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [confirm, setConfirm] = useState();\r\n  const { currentUser, signUpWithEmail, signInWithGoogle } = useAuth();\r\n  const { alert, createAlert } = useAlerts();\r\n  const history = useHistory();\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (email && password && confirm) {\r\n        handleSubmit(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirm) {\r\n      return createAlert(\"Error\", \"Passwords do not match.\");\r\n    }\r\n\r\n    if (!email || !password || !confirm) {\r\n      return createAlert(\"Error\", \"All fields must be completed.\");\r\n    }\r\n\r\n    try {\r\n      await signUpWithEmail(email, password);\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n      createAlert(\"Error\", e.message);\r\n    }\r\n  };\r\n\r\n  const handleGoogleSignIn = () => {\r\n    try {\r\n      signInWithGoogle();\r\n      history.push(\"/\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <section className=\"signup-form\">\r\n      <h2>Sign Up</h2>\r\n      {alert && <Alert type={alert.type} message={alert.message} />}\r\n      <Input\r\n        className=\"auth-input\"\r\n        type=\"email\"\r\n        value={email}\r\n        onChange={(e) => setEmail(e.target.value)}\r\n        placeholder=\"Email\"\r\n        required\r\n      />\r\n      <Input.Password\r\n        className=\"auth-input\"\r\n        type=\"password\"\r\n        value={password}\r\n        onChange={(e) => setPassword(e.target.value)}\r\n        placeholder=\"Password\"\r\n        onKeyDown={handleKeyDown}\r\n        iconRender={(visible) =>\r\n          visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n        }\r\n        required\r\n      />\r\n      <Input.Password\r\n        className=\"auth-input\"\r\n        type=\"password\"\r\n        value={confirm}\r\n        onChange={(e) => setConfirm(e.target.value)}\r\n        placeholder=\"Confirm password\"\r\n        iconRender={(visible) =>\r\n          visible ? <EyeTwoTone /> : <EyeInvisibleOutlined />\r\n        }\r\n        required\r\n      />\r\n      <Button\r\n        size=\"large\"\r\n        type=\"primary\"\r\n        className=\"submit\"\r\n        onClick={handleSubmit}\r\n      >\r\n        Create Account\r\n      </Button>\r\n      <Button\r\n        size=\"large\"\r\n        type=\"primary\"\r\n        className=\"google-btn\"\r\n        onClick={() => handleGoogleSignIn()}\r\n      >\r\n        Sign Up with Google\r\n      </Button>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","C:\\Dev\\ideapad\\src\\components\\pages\\Login.js",[],"C:\\Dev\\ideapad\\src\\components\\layout\\Alert.js",[],"C:\\Dev\\ideapad\\src\\context\\AlertsContext.js",[],"C:\\Dev\\ideapad\\src\\context\\ProjectsContext.js",[],"C:\\Dev\\ideapad\\src\\components\\projects\\Project.js",[],"C:\\Dev\\ideapad\\src\\context\\FeaturesContext.js",["103"],"import { createContext, useContext, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { message } from \"antd\";\r\n\r\nconst FeaturesContext = createContext();\r\n\r\nconst FeaturesProvider = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const [features, setFeatures] = useState();\r\n  const [feature, setFeature] = useState();\r\n\r\n  const getFeatures = (id) => {\r\n    try {\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(id)\r\n        .collection(\"features\")\r\n        .onSnapshot((qs) => {\r\n          let featuresList = [];\r\n          qs.forEach((doc) => {\r\n            const feature = doc.data();\r\n            feature.id = doc.id;\r\n            featuresList.push(feature);\r\n          });\r\n          setFeatures(featuresList);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getFeature = (projID, featID) => {\r\n    try {\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projID)\r\n        .collection(\"features\")\r\n        .doc(featID)\r\n        .onSnapshot((doc) => {\r\n          setFeature(doc.data());\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const editFeature = async (projID, featureID, title, description = null) => {\r\n    try {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projID)\r\n        .collection(\"features\")\r\n        .doc(featureID)\r\n        .update({\r\n          title: title,\r\n          description: description,\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteFeature = async (projID, featureID) => {\r\n    try {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projID)\r\n        .collection(\"features\")\r\n        .doc(featureID)\r\n        .delete();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = async (projId, featureId, prevCompleted) => {\r\n    if (prevCompleted) {\r\n      try {\r\n        await db\r\n          .collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"projects\")\r\n          .doc(projId)\r\n          .collection(\"features\")\r\n          .doc(featureId)\r\n          .update({\r\n            completed: false,\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      try {\r\n        await db\r\n          .collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"projects\")\r\n          .doc(projId)\r\n          .collection(\"features\")\r\n          .doc(featureId)\r\n          .update({\r\n            completed: true,\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProgress = () => {\r\n    let totalFeatures = 0;\r\n    let completedFeatures = 0;\r\n    features.forEach((feature) => {\r\n      totalFeatures += 1;\r\n      if (feature.completed) {\r\n        completedFeatures += 1;\r\n      }\r\n    });\r\n    let progress = completedFeatures / totalFeatures;\r\n    return Math.floor(progress * 100);\r\n  };\r\n\r\n  return (\r\n    <FeaturesContext.Provider\r\n      value={{\r\n        features,\r\n        feature,\r\n        getFeatures,\r\n        getFeature,\r\n        editFeature,\r\n        deleteFeature,\r\n        markAsCompleted,\r\n        getProgress,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </FeaturesContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useFeatures = () => {\r\n  return useContext(FeaturesContext);\r\n};\r\n\r\nexport default FeaturesProvider;\r\n","C:\\Dev\\ideapad\\src\\components\\features\\Features.js",["104","105"],"import { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useFeatures } from \"../../context/FeaturesContext\";\r\nimport { List, message, Popconfirm, Progress } from \"antd\";\r\nimport { DeleteFilled } from \"@ant-design/icons\";\r\nimport \"../../styles/features.css\";\r\n\r\nconst Features = (props) => {\r\n  const { id } = props;\r\n  const {\r\n    features,\r\n    getFeatures,\r\n    deleteFeature,\r\n    markAsCompleted,\r\n    getProgress,\r\n  } = useFeatures();\r\n\r\n  useEffect(() => {\r\n    getFeatures(id);\r\n  }, []);\r\n\r\n  const handleDelete = (featId) => {\r\n    try {\r\n      deleteFeature(id, featId);\r\n      message.success(\"Feature deleted successfully.\");\r\n    } catch (e) {\r\n      message.error(\"There was a problem deleting the feature.\");\r\n    }\r\n  };\r\n\r\n  if (features) {\r\n    return (\r\n      <section className=\"features-container\">\r\n        <Progress\r\n          className=\"progress-bar\"\r\n          percent={getProgress()}\r\n          status=\"active\"\r\n          strokeColor={\"#06d6a0\"}\r\n        />\r\n        {features && (\r\n          <List\r\n            dataSource={features}\r\n            itemLayout=\"horizontal\"\r\n            renderItem={(item) => (\r\n              <Link to={\"/project/\" + id + \"/feature/\" + item.id}>\r\n                <List.Item key={item.title}>\r\n                  <List.Item.Meta\r\n                    title={item.title}\r\n                    description={item.description}\r\n                  />\r\n                  <Progress\r\n                    className=\"progress-bar-small\"\r\n                    type=\"circle\"\r\n                    percent={getProgress()}\r\n                    status=\"active\"\r\n                    width={50}\r\n                    strokeColor={\"#118ab2\"}\r\n                  />\r\n                  <Popconfirm\r\n                    title=\"Are you sure you want to delete this feature?\"\r\n                    onConfirm={() => handleDelete(item.id)}\r\n                    okText=\"Delete\"\r\n                    cancelText=\"Cancel\"\r\n                  >\r\n                    <DeleteFilled id=\"deleteFeature\" className=\"action\" />\r\n                  </Popconfirm>\r\n                </List.Item>\r\n              </Link>\r\n            )}\r\n          ></List>\r\n        )}\r\n      </section>\r\n    );\r\n  } else {\r\n    return (\r\n      <section className=\"features-container\">\r\n        <h5>There are no features to display yet...</h5>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Features;\r\n","C:\\Dev\\ideapad\\src\\components\\features\\Feature.js",[],["106","107"],"C:\\Dev\\ideapad\\src\\components\\layout\\AppFooter.js",[],"C:\\Dev\\ideapad\\src\\context\\GlobalContext.js",[],"C:\\Dev\\ideapad\\src\\components\\pages\\FeaturePage.js",["108","109"],"C:\\Dev\\ideapad\\src\\components\\FeaturesWrapper.js",[],"C:\\Dev\\ideapad\\src\\context\\TasksContext.js",["110"],"import { createContext, useContext, useState } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport { message } from \"antd\";\r\nimport { ConsoleSqlOutlined } from \"@ant-design/icons\";\r\n\r\nconst TasksContext = createContext();\r\n\r\nconst TasksProvider = (props) => {\r\n  const { currentUser } = useAuth();\r\n  const [tasks, setTasks] = useState();\r\n\r\n  const createTask = async (\r\n    projectId,\r\n    featureId,\r\n    title,\r\n    description = null\r\n  ) => {\r\n    try {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .collection(\"features\")\r\n        .doc(featureId)\r\n        .collection(\"userTasks\")\r\n        .add({\r\n          title: title,\r\n          description: description,\r\n          completed: false,\r\n        });\r\n\r\n      message.success(\"Task created successfully.\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getTasks = async (projectId, featureId) => {\r\n    try {\r\n      db.collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .collection(\"features\")\r\n        .doc(featureId)\r\n        .collection(\"userTasks\")\r\n        .onSnapshot((qs) => {\r\n          let taskList = [];\r\n          qs.forEach((doc) => {\r\n            const task = doc.data();\r\n            task.id = doc.id;\r\n            taskList.push(task);\r\n          });\r\n          setTasks(taskList);\r\n        });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (projectId, featureId, taskId) => {\r\n    try {\r\n      await db\r\n        .collection(\"users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"projects\")\r\n        .doc(projectId)\r\n        .collection(\"features\")\r\n        .doc(featureId)\r\n        .collection(\"userTasks\")\r\n        .doc(taskId)\r\n        .delete();\r\n\r\n      message.success(\"Task deleted successfully.\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const markAsCompleted = async (\r\n    projectId,\r\n    featureId,\r\n    taskId,\r\n    prevCompleted\r\n  ) => {\r\n    if (prevCompleted) {\r\n      try {\r\n        await db\r\n          .collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"projects\")\r\n          .doc(projectId)\r\n          .collection(\"features\")\r\n          .doc(featureId)\r\n          .collection(\"userTasks\")\r\n          .doc(taskId)\r\n          .update({\r\n            completed: false,\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n      try {\r\n        await db\r\n          .collection(\"users\")\r\n          .doc(currentUser.uid)\r\n          .collection(\"projects\")\r\n          .doc(projectId)\r\n          .collection(\"features\")\r\n          .doc(featureId)\r\n          .collection(\"userTasks\")\r\n          .doc(taskId)\r\n          .update({\r\n            completed: true,\r\n          });\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getProgress = () => {\r\n    let totalTasks = 0;\r\n    let completedTasks = 0;\r\n    tasks.forEach((task) => {\r\n      totalTasks += 1;\r\n      if (task.completed) {\r\n        completedTasks += 1;\r\n      }\r\n    });\r\n    let progress = completedTasks / totalTasks;\r\n    return Math.floor(progress * 100);\r\n  };\r\n\r\n  return (\r\n    <TasksContext.Provider\r\n      value={{\r\n        tasks,\r\n        createTask,\r\n        getTasks,\r\n        deleteTask,\r\n        markAsCompleted,\r\n        getProgress,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </TasksContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useTasks = () => {\r\n  return useContext(TasksContext);\r\n};\r\n\r\nexport default TasksProvider;\r\n","C:\\Dev\\ideapad\\src\\components\\tasks\\Tasks.js",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":10,"column":11,"nodeType":"118","messageId":"119","endLine":10,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":23,"column":6,"nodeType":"122","endLine":23,"endColumn":19,"suggestions":"123"},{"ruleId":"116","severity":1,"message":"124","line":14,"column":11,"nodeType":"118","messageId":"119","endLine":14,"endColumn":22},{"ruleId":"116","severity":1,"message":"125","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":17},{"ruleId":"116","severity":1,"message":"126","line":14,"column":5,"nodeType":"118","messageId":"119","endLine":14,"endColumn":20},{"ruleId":"120","severity":1,"message":"127","line":20,"column":6,"nodeType":"122","endLine":20,"endColumn":8,"suggestions":"128"},{"ruleId":"112","replacedBy":"129"},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","severity":1,"message":"131","line":13,"column":3,"nodeType":"118","messageId":"119","endLine":13,"endColumn":11},{"ruleId":"120","severity":1,"message":"132","line":50,"column":6,"nodeType":"122","endLine":50,"endColumn":19,"suggestions":"133"},{"ruleId":"116","severity":1,"message":"134","line":5,"column":10,"nodeType":"118","messageId":"119","endLine":5,"endColumn":28},{"ruleId":"120","severity":1,"message":"135","line":25,"column":6,"nodeType":"122","endLine":25,"endColumn":41,"suggestions":"136"},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'alert' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProjects'. Either include it or remove the dependency array.","ArrayExpression",["139"],"'currentUser' is assigned a value but never used.","'message' is defined but never used.","'markAsCompleted' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getFeatures' and 'id'. Either include them or remove the dependency array.",["140"],["137"],["138"],"'Progress' is defined but never used.","React Hook useEffect has missing dependencies: 'featureId', 'getFeature', and 'projectId'. Either include them or remove the dependency array.",["141"],"'ConsoleSqlOutlined' is defined but never used.","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.",["142"],"no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},"Update the dependencies array to be: [currentUser, getProjects]",{"range":"151","text":"152"},"Update the dependencies array to be: [getFeatures, id]",{"range":"153","text":"154"},"Update the dependencies array to be: [currentUser, featureId, getFeature, projectId]",{"range":"155","text":"156"},"Update the dependencies array to be: [currentUser, projectId, featureId, getTasks]",{"range":"157","text":"158"},[822,835],"[currentUser, getProjects]",[523,525],"[getFeatures, id]",[1358,1371],"[currentUser, featureId, getFeature, projectId]",[670,705],"[currentUser, projectId, featureId, getTasks]"]